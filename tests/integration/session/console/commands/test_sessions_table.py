from pathlib import Path

import pendulum
import pytest

from alembic import util
from treat.mock import Mockery

from expanse.core.application import Application
from expanse.testing.command_tester import CommandTester


pytestmark = pytest.mark.db


@pytest.mark.usefixtures("setup_databases")
def test_command_creates_a_new_migration_file_with_necessary_operations(
    command_tester: CommandTester, app: Application, tmp_path: Path, mockery: Mockery
) -> None:
    mockery.mock(util).should_receive("rev_id").and_return("1234567890")

    app.config["paths"]["database"] = tmp_path

    command = command_tester.command("make sessions table")

    with pendulum.travel_to(pendulum.datetime(2024, 9, 5, 12, 34, 56), freeze=True):
        assert command.run() == 0

    output: str = command.output.fetch()

    expected = f"""
  - Generating {tmp_path}/migrations/versions/2024_09_05_123456_1234567890_create_sessions_table.py...
  - Generating {tmp_path}/migrations/versions/2024_09_05_123456_1234567890_create_sessions_table.py... Done
"""

    assert expected in output

    content = tmp_path.joinpath(
        "migrations/versions/2024_09_05_123456_1234567890_create_sessions_table.py"
    ).read_text()

    assert (
        content
        == """\
\"""
Create sessions table

Revision ID: 1234567890
Revises: 
Create Date: 2024-09-05 12:34:56
\"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1234567890'
down_revision: str | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sessions',
    sa.Column('id', sa.String(length=40), nullable=False),
    sa.Column('payload', sa.Text(), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(), nullable=True),
    sa.Column('last_activity', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_sessions_last_activity', 'sessions', ['last_activity'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_sessions_last_activity', table_name='sessions')
    op.drop_table('sessions')
    # ### end Alembic commands ###
"""
    )
